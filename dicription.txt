						Многопоточность
Многопочность  позволяеть нам запустить несколько задач одновремменно. Как обяснил нам акаи Азиз внутри большой трубы несколько мааленьких труб и внутри каждой трубы тичет например вода и у каждой труби своя скорость течение и свой конечный маршрут. Минус этого в том что мы не можем управлять потоками.

                                                                               ПРИМЕР

Thread myThread = new Thread(func); //Создаем новый объект потока (Thread)

            myThread.Start(); //запускаем поток

            for (int i = 0; i < 10; i++ )
            {
                Console.WriteLine("Поток 1 выводит " + i);
                Thread.Sleep(0);
            }

            Console.Read(); //Приостановим основной поток

        }

        //Функция запускаемая из другого потока
        static void func() 
        {
            for (int i = 0; i < 10; i++)
            {
                Console.WriteLine("Поток 2 выводит " + i.ToString());
                Thread.Sleep(0);
            }

					  асинхронное програмирование
Асинхронное программирование позволяеть продолжать работу программи пока какойнибудь другой запрос в ожидании в снхронном пока например запрос в бд не закончится программа не будет работать

                                                                           ПРИМЕР
static void Factorial()
        {
            int result = 1;
            for(int i = 1; i <= 6; i++)
            {
                result *= i;
            }
            Thread.Sleep(8000);
            Console.WriteLine($"Факториал равен {result}");
        }
        // определение асинхронного метода
        static async void FactorialAsync()
        {
            Console.WriteLine("Начало метода FactorialAsync"); // выполняется синхронно
            await Task.Run(()=>Factorial());                // выполняется асинхронно
            Console.WriteLine("Конец метода FactorialAsync");
        }


					 Параллельное программирование
По мойму Параллельное программирование тоже позволяеть обработать множественных запросом одновременно. Чесно я не доконца понимаю что такое Параллельное программирование возможно не успел вникнуть. 


var parallelQuery = 
   from n in numbers.AsParallel()
   where Enumerable.Range (2, (int) Math.Sqrt (n)).All (i => n % i > 0)
   select n;




















